import sys
import csv
import config as cfg
import constants as const
import xmltodict, json
import pandas as pd
import random
import time
from utils import get_logger
db = import_da('dist_db')


# Client corresponds to Application instance
class Application(process):
    def setup(coord_ps):
        # print(coord_ps)
        pass

    def run():
        # send(('DB_WRITE',{'table':'employee', 
        #                   'payload':{'id':1, 'name':'emp10'},
        #                   'delay':True}),to=coord_ps)
        print(coord_ps)
        send(('DB_READ',{'table':'employee', 
                          'payload':{'id':10},
                          'delay':True}),to=coord_ps)
        # output("Starting Application Instance")
        await(False)

    def receive(msg=('DB_READ_RESPONSE',data), from_=p):
        pass
        # output("Response received in client!!")
    def receive(msg=('DB_WRITE_RESPONSE',data), from_=p):
        pass
        # output("Response received in client!!")



# class SubCoordP(process):
#     def setup():
#         pass

#     def run():
#         await(False)

#     def receive(msg= ('APP_EVALUATION_REQUEST',),from_=p):
#         output("Response received in sub process!!")
#         send(('APP_EVALUATION_RESPONSE',),to=p)


# class ResCoordP(process):
#     def setup():
#         pass

#     def run():
#         pass

#     def receive(msg= ()):
#         pass


# class WorkerP(process):
#     def setup():
#         pass

#     def run():
#         pass

#     def receive(msg= ()):
#         pass


def main():
    config_fpath = sys.argv[1] if len(sys.argv) > 1 else "../config/main-config.json"
    config = cfg.load_config(config_fpath)
    # do something with config
    config(channel="fifo", clock="Lamport")

    db_ps = new(db.DBEmulator, num=1)
    setup(db_ps,(config,))
    start(db_ps)

    # coord_ps = new(SubCoordP, num=config['num_coords'])
    # setup(coord_ps,())
    
    app_ps = new(Application, num=config['num_clients'])
    setup(app_ps,(db_ps,))
    
    # start(coord_ps)    
    start(app_ps)
    print(app)